{"version":3,"sources":["componants/AddingTaskForm.js","componants/Search.js","componants/Sort.js","componants/TaskItem.js","componants/TaskList.js","componants/Control.js","componants/HeaderForm.js","componants/TaskForm.js","componants/TaskFormEdit.js","App.js","reportWebVitals.js","index.js"],"names":["AddingTaskForm","onDisplayTaskForm","props","onReceiverDisplayTaskForm","onSenderDisplayTaskForm","className","onClick","this","Component","Search","onHandleChange","event","target","dataSearch","name","value","type","checked","setState","onHanldeSubmit","preventDefault","onSearchTask","state","onSubmit","onChange","placeholder","Sort","SortAZ","onSortTask","SortZA","SortActivated","SortPaused","href","TaskItem","onUpdateStatus","idTask","onTaskFormEdit","onDeleteTaskItem","index","nameTask","Number","statusTask","TaskList","infoFilter","nameFilter","statusFilter","sortFilter","array","i","onSenderTask","length","toLowerCase","includes","onSenderDataSearch","push","sort","a","b","fa","fb","elementArray","onSortTaskItem","key","listSortName","reverse","listSortStatus","listFilter","map","e","id","Control","display","taskList","displayTaskForm","dataSort","localStorage","setItem","JSON","stringify","HeaderForm","style","textAlign","TaskForm","infoTask","generateID","console","log","onHandleSubmit","onReceiverTask","Math","floor","random","toString","substring","s4","onReset","onHandleReset","TaskFormEdit","onSenderTaskUpdate","onReciverTaskUpdate","App","tasks","check","forEach","taskUpdate","findIndex","tempTaskList","task","taskListTemp","onLoadLocalStorage","getItem","parse","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAkBeA,E,4MAdXC,kBAAoB,WAChB,EAAKC,MAAMC,2BAA2B,EAAKD,MAAME,0B,4CAIrD,WACI,OACI,8BACI,yBAAQC,UAAU,kBAAkBC,QAASC,KAAKN,kBAAlD,UAAqE,sBAAMI,UAAYE,KAAKL,MAAME,wBAA8C,mBAApB,oBAA5H,IAAyKG,KAAKL,MAAME,wBAA0C,iBAAhB,uB,GAVjMI,a,OCoCdC,E,kDAnCX,WAAYP,GAAO,IAAD,8BACd,cAAMA,IAKVQ,eAAiB,SAACC,GACd,IAAIC,EAASD,EAAMC,OACfC,EAAaD,EAAOE,KACpBC,EAAwB,aAAhBH,EAAOI,KAAsBJ,EAAOK,QAAUL,EAAOG,MACjE,EAAKG,SAAL,eACKL,EAAcE,KAXL,EAgBlBI,eAAiB,SAACR,GACdA,EAAMS,iBACN,EAAKlB,MAAMmB,aAAa,EAAKC,MAAMT,aAhBnC,EAAKS,MAAO,CACRT,WAAW,IAHD,E,0CAqBlB,WACI,OAEI,uBAAMR,UAAU,cAAckB,SAAUhB,KAAKY,eAA7C,UACI,uBAAOH,KAAK,OAAOX,UAAU,eAAeU,MAAOR,KAAKe,MAAMT,WAAYC,KAAK,aAAaU,SAAUjB,KAAKG,eAAgBe,YAAY,iBACvI,yBAAQT,KAAK,SAASX,UAAU,kBAAhC,UACI,sBAAMA,UAAU,oBAAhB,eADJ,mB,GA3BKG,aCsCNkB,E,4MApCbC,OAAQ,SAAChB,GACPA,EAAMS,iBACN,EAAKlB,MAAM0B,WAAW,WAAW,I,EAEnCC,OAAQ,SAAClB,GACPA,EAAMS,iBACN,EAAKlB,MAAM0B,WAAW,WAAW,I,EAEnCE,cAAe,SAACnB,GACdA,EAAMS,iBACN,EAAKlB,MAAM0B,WAAW,aAAa,I,EAErCG,WAAY,SAACpB,GACXA,EAAMS,iBACN,EAAKlB,MAAM0B,WAAW,aAAa,I,4CAGrC,WAEE,OACE,qBAAKvB,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,mBAAGA,UAAU,kCAAkC2B,KAAK,IAAIhB,KAAK,SAAS,iBAAe,WAArF,sBACA,qBAAIX,UAAU,gBAAd,UACE,oBAAIC,QAASC,KAAKoB,OAAlB,SAA0B,mBAAGtB,UAAU,gBAAgB2B,KAAK,IAAlC,wBAC1B,oBAAI1B,QAASC,KAAKsB,OAAlB,SAA0B,mBAAGxB,UAAU,gBAAgB2B,KAAK,IAAlC,wBAC1B,6BAAI,oBAAI3B,UAAU,uBAClB,oBAAIC,QAASC,KAAKuB,cAAlB,SAAiC,mBAAGzB,UAAU,gBAAgB2B,KAAK,IAAlC,gCACjC,oBAAI1B,QAASC,KAAKwB,WAAlB,SAA8B,mBAAG1B,UAAU,gBAAgB2B,KAAK,IAAlC,yC,GA9BvBxB,aC6BJyB,E,4MA5BXC,eAAiB,WACb,EAAKhC,MAAMgC,eAAe,EAAKhC,MAAMiC,S,EAEzCC,eAAiB,WACb,EAAKlC,MAAMkC,eAAe,EAAKlC,MAAMiC,S,EAEzCE,iBAAmB,WACf,EAAKnC,MAAMmC,iBAAiB,EAAKnC,MAAMiC,S,4CAI3C,WACI,OACI,+BACI,6BAAK5B,KAAKL,MAAMoC,QAChB,6BAAK/B,KAAKL,MAAMqC,WAChB,6BACI,wBAAQlC,UAA2C,IAAhCmC,OAAOjC,KAAKL,MAAMuC,YAAgB,iCAAiC,sCAAuCnC,QAASC,KAAK2B,eAA3I,SAA4L,IAAhCM,OAAOjC,KAAKL,MAAMuC,YAAgB,YAAY,aAE9M,+BACI,yBAAQpC,UAAU,kCAAkCC,QAASC,KAAK6B,eAAlE,cAAmF,sBAAM/B,UAAU,qBAAnG,WACA,yBAAQA,UAAU,gCAAgCC,QAASC,KAAK8B,iBAAhE,cAAmF,sBAAMhC,UAAU,gBAAnG,uB,GAtBGG,aC8HRkC,E,kDA5HX,WAAYxC,GAAQ,IAAD,8BACf,cAAMA,IAQVQ,eAAiB,SAACC,GACd,IAAIC,EAASD,EAAMC,OACf+B,EAAa/B,EAAOE,KACpBC,EAAwB,aAAhBH,EAAOI,KAAsBJ,EAAOK,QAAUL,EAAOG,MACjE,EAAKG,SAAL,eACKyB,EAAa5B,KAZlB,EAAKO,MAAQ,CACTsB,WAAY,GACZC,cAAe,EACfC,YAAa,GALF,E,8CAkBnB,WAEI,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAIzC,KAAKL,MAAM+C,aAAaC,OAAQF,IAE3CzC,KAAKL,MAAM+C,aAAaD,GAAGT,SAASY,cAAcC,SAAS7C,KAAKL,MAAMmD,mBAAmBF,gBACnF5C,KAAKL,MAAM+C,aAAaD,GAAGT,SAASY,cAAcC,SAAS7C,KAAKe,MAAMsB,WAAWO,iBAChFX,OAAOjC,KAAKe,MAAMuB,gBAAkBL,OAAOjC,KAAKL,MAAM+C,aAAaD,GAAGP,cAC9B,IAArCD,OAAOjC,KAAKe,MAAMuB,gBAG7BE,EAAMO,KAAK/C,KAAKL,MAAM+C,aAAaD,IAG3C,OAAOD,I,0BAGX,WACI,IAAIA,EAAQxC,KAAKL,MAAM+C,aAavB,OAZAF,EAAMQ,MAAK,SAACC,EAAGC,GACX,IAAIC,EAAKF,EAAEjB,SAASY,cAChBQ,EAAKF,EAAElB,SAASY,cAEpB,OAAIO,EAAKC,GACG,EAERD,EAAKC,EACE,EAEJ,KAEJZ,I,4BAGX,WACI,IAAIA,EAAQxC,KAAKL,MAAM+C,aAavB,OAZAF,EAAMQ,MAAK,SAACC,EAAGC,GACX,IAAIC,EAAKF,EAAEf,WACPkB,EAAKF,EAAEhB,WAEX,OAAIiB,EAAKC,GACG,EAERD,EAAKC,EACE,EAEJ,KAEJZ,I,oBAIX,WAAU,IAAD,OAeDa,GAZgC,aAAjCrD,KAAKL,MAAM2D,eAAe/C,KAClBP,KAAKL,MAAM2D,eAAeC,IAAIvD,KAAKwD,eAAexD,KAAKwD,eAAeC,UACvC,eAAjCzD,KAAKL,MAAM2D,eAAe/C,KACxBP,KAAKL,MAAM2D,eAAeC,IAAIvD,KAAK0D,iBAAiBD,UAAUzD,KAAK0D,iBAEjE1D,KAAK2D,cAOOC,KAAI,SAACC,EAAGpB,GAC7B,OAAQ,cAAC,EAAD,CAAqBV,MAAOU,EAAGb,OAAQiC,EAAEC,GAAI9B,SAAU6B,EAAE7B,SAAUE,WAAY2B,EAAE3B,WAAYP,eAAgB,EAAKhC,MAAMgC,eAAgBE,eAAgB,EAAKlC,MAAMkC,eAAgBC,iBAAkB,EAAKnC,MAAMmC,kBAAjM+B,EAAEC,OAI7B,OACI,wBAAOhE,UAAU,+CAAjB,UACI,uBAAOA,UAAU,sBAAjB,SACI,+BACI,oCACA,sCACA,uCACA,+CAGR,kCACI,+BACI,mCACA,6BACI,uBAAOW,KAAK,OAAOX,UAAU,eAAeU,MAAOR,KAAKe,MAAMsB,WAAY9B,KAAK,aAAaU,SAAUjB,KAAKG,mBAE/G,6BACI,yBAAQL,UAAU,cAAcU,MAAOR,KAAKe,MAAMuB,aAAc/B,KAAK,eAAeU,SAAUjB,KAAKG,eAAnG,UACI,wBAAQK,OAAQ,EAAhB,iBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,4BAGR,0BAGH6C,Y,GApHEpD,aCqER8D,E,kDAjEX,WAAYpE,GAAQ,IAAD,8BACf,cAAMA,IAWVC,0BAA4B,SAACoE,GACzB,EAAKrD,SAAS,CACVsD,SAAU,EAAKtE,MAAM+C,aACrBwB,gBAAiBF,IAErB,EAAKrE,MAAMC,0BAA0BoE,IAjBtB,EAoBnBlD,aAAe,SAACR,GACZ,EAAKK,SAAS,CACVL,WAAYA,KAtBD,EAyBnBe,WAAa,SAACd,EAAKgD,GAChB,EAAK5C,SAAS,CACVwD,SAAS,CAAC5D,OAAKgD,UAzBlB,EAAKxC,MAAQ,CACTT,WAAY,GACZ6D,SAAU,CAAC5D,KAAK,GAAGgD,IAAI,GACvBU,SAAU,EAAKtE,MAAM+C,aACrBwB,iBAAiB,GANN,E,0CAiCnB,WAEI,OADAE,aAAaC,QAAQ,OAAQC,KAAKC,UAAUvE,KAAKL,MAAM+C,eAEnD,gCACI,qBAAK5C,UAAU,WAAf,SACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,EAAD,CAAgBD,wBAAyBG,KAAKL,MAAME,wBAAyBD,0BAA2BI,KAAKJ,gCAGrH,sBAAKE,UAAU,WAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,EAAD,CAAQgB,aAAcd,KAAKc,iBAE/B,qBAAKhB,UAAU,gBAAf,SACI,cAAC,EAAD,CAAMuB,WAAYrB,KAAKqB,kBAI/B,qBAAKvB,UAAU,MAAf,SACI,cAAC,EAAD,CACIgD,mBAAoB9C,KAAKe,MAAMT,WAC/BoC,aAAc1C,KAAKL,MAAM+C,aACzBf,eAAgB3B,KAAKL,MAAMgC,eAC3BE,eAAgB7B,KAAKL,MAAMkC,eAC3BC,iBAAkB9B,KAAKL,MAAMmC,iBAC7BwB,eAAgBtD,KAAKe,MAAMoD,oB,GA3D7BlE,aCOPuE,E,4JAVX,WACI,OACI,sBAAK1E,UAAU,OAAf,UACI,oBAAI2E,MAAO,CAACC,UAAU,UAAtB,0BACA,8B,GALSzE,aCuFV0E,E,kDArFX,WAAYhF,GAAQ,IAAD,8BACf,cAAMA,IAOVQ,eAAiB,SAACC,GACd,IAAIC,EAASD,EAAMC,OACfuE,EAAWvE,EAAOE,KAClBC,EAAwB,aAAhBH,EAAOI,KAAsBJ,EAAOK,QAAUL,EAAOG,MACjE,EAAKG,SAAL,aACImD,GAAG,EAAKe,cACPD,EAAWpE,IAEhBsE,QAAQC,IAAI,EAAKhE,MAAMmB,aAhBR,EAoBnB8C,eAAiB,SAAC5E,GACdA,EAAMS,iBACNiE,QAAQC,IAAI,EAAKhE,MAAMmB,YACvB,EAAKvC,MAAMsF,eAAe,EAAKlE,QArB/B,EAAKA,MAAQ,CACT+C,GAAG,GACH9B,SAAU,GACVE,WAAY,GALD,E,iDA0BnB,SAAc9B,GACVJ,KAAKW,SAAS,CACVqB,SAAU,GACVE,WAAY,M,gBAMpB,WACI,OAAOgD,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAAqBC,SAAS,IAAIC,UAAU,K,wBAE5E,WACI,OAAOtF,KAAKuF,KAAOvF,KAAKuF,KAAO,IAAMvF,KAAKuF,KAAO,IAAMvF,KAAKuF,KAAO,IAAMvF,KAAKuF,KAAOvF,KAAKuF,KAAO,IAAMvF,KAAKuF,O,oBAGhH,WAEI,OACI,sBAAKzF,UAAU,6BAAf,UAEI,qBAAKA,UAAU,+CAAf,SACI,qBAAIA,UAAU,kBAAd,UACI,mBAAGA,UAAU,cAAb,yBACA,sBAAMA,UAAU,sCAGxB,qBAAKA,UAAU,YAAf,SAEI,uBAAMkB,SAAUhB,KAAKgF,eAAgBQ,QAASxF,KAAKyF,cAAnD,UACI,sBAAK3F,UAAU,sBAAf,UACI,uBAAOW,KAAK,OAAOX,UAAU,eAAeU,MAAOR,KAAKe,MAAMiB,SAAUzB,KAAK,WAAWU,SAAUjB,KAAKG,iBACvG,6CAEJ,sBAAKL,UAAU,sBAAf,UACI,yBAAQA,UAAU,cAAcU,MAAOR,KAAKe,MAAMmB,WAAY3B,KAAK,aAAaU,SAAUjB,KAAKG,eAA/F,UACI,wBAAQK,MAAO,EAAf,uBACA,wBAAQA,MAAO,EAAf,uBAEJ,8CAEJ,sBAAKV,UAAU,cAAf,UACI,yBAAQW,KAAK,SAASX,UAAU,sBAAhC,UAAsD,sBAAMA,UAAU,0BAAtE,WACA,yBAAQW,KAAK,QAAQX,UAAU,qBAA/B,UAAqD,sBAAMA,UAAU,qBAArE,4B,GAvELG,aC+ERyF,E,kDA5EX,WAAY/F,GAAQ,IAAD,8BACf,cAAMA,IASVQ,eAAiB,SAACC,GACd,IAAIC,EAASD,EAAMC,OACfuE,EAAWvE,EAAOE,KAClBC,EAAwB,aAAhBH,EAAOI,KAAsBJ,EAAOK,QAAUL,EAAOG,MACjE,EAAKG,SAAL,aACImD,GAAI,EAAKnE,MAAMgG,mBAAmB7B,IACjCc,EAAWpE,KAhBD,EAoBnBwE,eAAiB,SAAC5E,GACdA,EAAMS,iBACN,EAAKlB,MAAMiG,oBAAoB,EAAK7E,QAtBrB,EAyBnB0E,cAAgB,SAACrF,GACb,EAAKO,SAAS,CACVmD,GAAI,EAAKnE,MAAMgG,mBAAmB7B,GAClC9B,SAAU,EAAKrC,MAAMgG,mBAAmB3D,SACxCE,WAAYD,OAAO,EAAKtC,MAAMgG,mBAAmBzD,eA3BrD,EAAKnB,MAAQ,CACT+C,GAAG,GACH9B,SAAS,GACTE,WAAW,GALA,E,0CAiCnB,WAEI,OACI,sBAAKpC,UAAU,6BAAf,UAEI,qBAAKA,UAAU,+CAAf,SACI,qBAAIA,UAAU,kBAAd,UACI,mBAAGA,UAAU,cAAb,uBACA,sBAAMA,UAAU,sCAGxB,qBAAKA,UAAU,YAAf,SAEI,uBAAMkB,SAAUhB,KAAKgF,eAAgBQ,QAASxF,KAAKyF,cAAnD,UACI,sBAAK3F,UAAU,sBAAf,UACI,uBAAOW,KAAK,OAAOX,UAAU,eAAeU,MAAOR,KAAKe,MAAMiB,SAAUzB,KAAK,WAAWU,SAAUjB,KAAKG,iBACvG,6CAEJ,sBAAKL,UAAU,sBAAf,UACI,yBAAQA,UAAU,cAAcU,MAAOR,KAAKe,MAAMmB,WAAY3B,KAAK,aAAaU,SAAUjB,KAAKG,eAA/F,UACI,wBAAQK,MAAO,EAAf,uBACA,wBAAQA,MAAO,EAAf,uBAEJ,8CAEJ,sBAAKV,UAAU,eAAf,UACI,yBAAQW,KAAK,SAASX,UAAU,iCAAhC,UAAiE,sBAAMA,UAAU,0BAAjF,WACA,yBAAQW,KAAK,QAAQX,UAAU,iCAA/B,UAAiE,sBAAMA,UAAU,wBAAjF,2B,GA/DDG,aCoJZ4F,E,kDA7Ib,WAAYlG,GAAQ,IAAD,8BACjB,cAAMA,IAuBRsF,eAAiB,SAACa,GAChB,IAAIC,EAAQ,EACR9B,EAAW,EAAKlD,MAAMkD,SAE1BA,EAAS+B,SAAQ,SAAAnC,GACXA,EAAEC,KAAOgC,EAAMhC,IACjBiC,OAIU,IAAVA,GACFjB,QAAQC,IAAI,WACZd,EAASlB,KAAK+C,IAEdhB,QAAQC,IAAIgB,GAEd,EAAKpF,SAAS,CAAEsD,SAAUA,KAxCT,EA4CnBrE,0BAA4B,SAACoE,GAC3B,EAAKrD,SAAS,CACZqD,QAASA,EACTiC,WAAY,CAAEnC,GAAI,GAAI9B,SAAU,GAAIE,WAAY,MA/CjC,EAmDnBP,eAAiB,SAACmC,GAChB,IAAM/B,EAAQ,EAAKmE,UAAUpC,GACvBqC,EAAe,EAAKpF,MAAMkD,UAEjB,IAAXlC,IACFoE,EAAapE,GAAOG,WAAwD,IAA3CD,OAAOkE,EAAapE,GAAOG,YAAoB,EAAI,EACpF,EAAKvB,SAAS,CACZsD,SAAUkC,MA1DG,EA8DnBD,UAAY,SAACpC,GACX,IAAK,IAAIrB,EAAI,EAAGA,EAAI,EAAK1B,MAAMkD,SAAStB,OAAQF,IAC9C,GAAI,EAAK1B,MAAMkD,SAASxB,GAAGqB,KAAOA,EAChC,OAAOrB,EAGX,OAAQ,GApES,EAuEnBZ,eAAiB,SAACiC,GAChB,IAAM/B,EAAQ,EAAKmE,UAAUpC,GAC7B,EAAKnD,SAAS,CACZqD,SAAS,EACTiC,WAAY,EAAKlF,MAAMkD,SAASlC,MA3EjB,EAiFnB6D,oBAAsB,SAACQ,GACrB,IAAMrE,EAAQ,EAAKmE,UAAUE,EAAKtC,IAC9BuC,EAAe,EAAKtF,MAAMkD,SAC9BoC,EAAatE,GAASqE,EACtB,EAAKzF,SAAS,CACZsD,SAAUoC,EACVJ,WAAY,CAAEnC,GAAI,GAAI9B,SAAU,GAAIE,WAAY,MAvFjC,EA2FnBJ,iBAAmB,SAACgC,GAGlB,IAFA,IAAM/B,EAAQ,EAAKmE,UAAUpC,GACzBuC,EAAe,GACV5D,EAAI,EAAGA,EAAI,EAAK1B,MAAMkD,SAAStB,OAAQF,IAC1CA,IAAMV,GACRsE,EAAatD,KAAK,EAAKhC,MAAMkD,SAASxB,IAG1C,EAAK9B,SAAS,CACZsD,SAAUoC,EACVJ,WAAY,CAAEnC,GAAI,GAAI9B,SAAU,GAAIE,WAAY,MAnGlD,EAAKnB,MAAQ,CACXkD,SAAU,GACVD,SAAS,EACTiC,WAAY,CAAEnC,GAAI,GAAI9B,SAAU,GAAIE,WAAY,IAE7C,EAAKnB,MAAMkD,SAAStB,QACvB,EAAK2D,qBARU,E,sDAanB,WAAsB,IAAD,OAEflC,cAAgBA,aAAamC,QAAQ,SAC3BjC,KAAKkC,MAAMpC,aAAamC,QAAQ,SACtCP,SAAQ,SAAAS,GACZ,EAAK1F,MAAMkD,SAASlB,KAAK0D,Q,oBAuF/B,WAEE,OACE,sBAAK3G,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,MAAf,UAEE,qBAAKA,UAAWE,KAAKe,MAAMiD,QAAU,gBAAkB,SAAvD,SAEE,cAAC,EAAD,CAAUiB,eAAgBjF,KAAKiF,mBAGjC,qBAAKnF,UAAwC,KAA7BE,KAAKe,MAAMkF,WAAWnC,IAAc9D,KAAKe,MAAMiD,QAA4B,SAAlB,gBAAzE,SACE,cAAC,EAAD,CACE2B,mBAAoB3F,KAAKe,MAAMkF,WAC/BL,oBAAqB5F,KAAK4F,wBAI9B,qBAAK9F,UAAWE,KAAKe,MAAMiD,SAAwC,KAA7BhE,KAAKe,MAAMkF,WAAWnC,GAAY,WAAa,YAArF,SACE,cAAC,EAAD,CACEpB,aAAc1C,KAAKe,MAAMkD,SACzBpE,wBAAyBG,KAAKe,MAAMiD,QACpCiB,eAAgBjF,KAAKiF,eACrBrF,0BAA2BI,KAAKJ,0BAChC+B,eAAgB3B,KAAK2B,eACrBE,eAAgB7B,KAAK6B,eACrBC,iBAAkB9B,KAAK8B,+B,GAtInB7B,aCKHyG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.109e694f.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass AddingTaskForm extends Component {\r\n\r\n    onDisplayTaskForm = () => { \r\n        this.props.onReceiverDisplayTaskForm(!this.props.onSenderDisplayTaskForm);\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"btn btn-primary\" onClick={this.onDisplayTaskForm}><span className={!this.props.onSenderDisplayTaskForm ? \"fa fa-plus me-2\" : \"fa fa-minus me-2\"} /> {!this.props.onSenderDisplayTaskForm ? \"Adding Task\" : \"Hide task form\"}</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddingTaskForm;","import { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            dataSearch:''\r\n        }\r\n    }\r\n    onHandleChange = (event) =>{\r\n        let target = event.target;\r\n        let dataSearch = target.name;\r\n        let value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        this.setState({\r\n            [dataSearch] : value\r\n        })\r\n      \r\n    }\r\n\r\n    onHanldeSubmit = (event) =>{\r\n        event.preventDefault();\r\n        this.props.onSearchTask(this.state.dataSearch);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <form className=\"input-group\" onSubmit={this.onHanldeSubmit}>\r\n                <input type=\"text\" className=\"form-control\" value={this.state.dataSearch} name=\"dataSearch\" onChange={this.onHandleChange} placeholder=\"Searching...\" />\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    <span className=\"fa fa-search me-2\"> </span>\r\n                    Search\r\n                </button>\r\n            </form>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Search;","import { Component } from \"react\";\r\n\r\nclass Sort extends Component {\r\n\r\n  SortAZ =(event)=>{\r\n    event.preventDefault();\r\n    this.props.onSortTask(\"nameTask\",1);\r\n  }\r\n  SortZA =(event)=>{\r\n    event.preventDefault();\r\n    this.props.onSortTask(\"nameTask\",0);\r\n  }\r\n  SortActivated =(event)=>{\r\n    event.preventDefault();\r\n    this.props.onSortTask(\"statusTask\",1);\r\n  }\r\n  SortPaused =(event)=>{\r\n    event.preventDefault();\r\n    this.props.onSortTask(\"statusTask\",0);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"navbar p-0 \">\r\n        <div className=\" dropdown \">\r\n          <a className=\"btn btn-primary dropdown-toggle\" href=\" \" type=\"button\" data-bs-toggle=\"dropdown\"> Sorting</a>\r\n          <ul className=\"dropdown-menu\"  >\r\n            <li onClick={this.SortAZ}><a className=\"dropdown-item\" href=\" \">Name A-Z</a></li>\r\n            <li onClick={this.SortZA}><a className=\"dropdown-item\" href=\" \">Name Z-A</a></li>\r\n            <li><hr className=\"dropdown-divider\" /></li>\r\n            <li onClick={this.SortActivated}><a className=\"dropdown-item\" href=\" \">Status activated</a></li>\r\n            <li onClick={this.SortPaused}><a className=\"dropdown-item\" href=\" \">Status paused</a></li>\r\n          </ul>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Sort;","import { Component } from \"react\";\r\n\r\nclass TaskItem extends Component {\r\n    onUpdateStatus = () =>{\r\n        this.props.onUpdateStatus(this.props.idTask);\r\n    }\r\n    onTaskFormEdit = () =>{\r\n        this.props.onTaskFormEdit(this.props.idTask);\r\n    }\r\n    onDeleteTaskItem = () =>{\r\n        this.props.onDeleteTaskItem(this.props.idTask);\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <th>{this.props.index}</th>\r\n                <td>{this.props.nameTask}</td>\r\n                <td>\r\n                    <button className={Number(this.props.statusTask)===1?\"btn btn-success text-white m-1\":\"btn btn-danger text-white me-1 ms-1\"} onClick={this.onUpdateStatus}>{Number(this.props.statusTask)===1?\"Activated\":\"Paused\"}</button>\r\n                </td>\r\n                <td>\r\n                    <button className=\"btn btn-warning text-white m-1 \" onClick={this.onTaskFormEdit}> <span className=\"fa fa-pencil-alt\"></span> Edit</button>\r\n                    <button className=\"btn btn-danger text-white m-1\" onClick={this.onDeleteTaskItem}> <span className=\"fa fa-trash\"></span> Delete</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;","import { Component } from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nameFilter: '',\r\n            statusFilter: -1,\r\n            sortFilter: -1,\r\n\r\n        }\r\n    }\r\n    onHandleChange = (event) => {\r\n        let target = event.target;\r\n        let infoFilter = target.name;\r\n        let value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        this.setState({\r\n            [infoFilter]: value\r\n        });\r\n\r\n    }\r\n    listFilter() {\r\n        let array = [];\r\n        for (let i = 0; i < this.props.onSenderTask.length; i++) {\r\n            if (\r\n                (this.props.onSenderTask[i].nameTask.toLowerCase().includes(this.props.onSenderDataSearch.toLowerCase())\r\n                    && this.props.onSenderTask[i].nameTask.toLowerCase().includes(this.state.nameFilter.toLowerCase())\r\n                    && (Number(this.state.statusFilter) === Number(this.props.onSenderTask[i].statusTask)\r\n                        || Number(this.state.statusFilter) === -1)\r\n                )\r\n            ) {\r\n                array.push(this.props.onSenderTask[i]);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    listSortName() {\r\n        let array = this.props.onSenderTask;\r\n        array.sort((a, b) => {\r\n            let fa = a.nameTask.toLowerCase(),\r\n                fb = b.nameTask.toLowerCase();\r\n        \r\n            if (fa < fb) {\r\n                return -1;\r\n            }\r\n            if (fa > fb) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n        return array;\r\n\r\n    }\r\n    listSortStatus(){\r\n        let array = this.props.onSenderTask;\r\n        array.sort((a, b) => {\r\n            let fa = a.statusTask,\r\n                fb = b.statusTask;\r\n        \r\n            if (fa < fb) {\r\n                return -1;\r\n            }\r\n            if (fa > fb) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n        return array;\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        let array = [];\r\n        if(this.props.onSortTaskItem.name===\"nameTask\"){\r\n            array= this.props.onSortTaskItem.key?this.listSortName():this.listSortName().reverse();\r\n        }else if(this.props.onSortTaskItem.name===\"statusTask\"){\r\n            array= this.props.onSortTaskItem.key?this.listSortStatus().reverse():this.listSortStatus();\r\n        }else{\r\n             array = this.listFilter();\r\n        }\r\n       \r\n\r\n\r\n\r\n\r\n        var elementArray = array.map((e, i) => {\r\n            return (<TaskItem key={e.id} index={i} idTask={e.id} nameTask={e.nameTask} statusTask={e.statusTask} onUpdateStatus={this.props.onUpdateStatus} onTaskFormEdit={this.props.onTaskFormEdit} onDeleteTaskItem={this.props.onDeleteTaskItem} />);\r\n        });\r\n\r\n        \r\n        return (\r\n            <table className=\"table table-hover table-bordered text-center\">\r\n                <thead className=\"bg-info bg-gradient\">\r\n                    <tr>\r\n                        <th>NO</th>\r\n                        <th>Name</th>\r\n                        <th>Satus</th>\r\n                        <th>Function</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th> </th>\r\n                        <td>\r\n                            <input type=\"text\" className=\"form-control\" value={this.state.nameFilter} name=\"nameFilter\" onChange={this.onHandleChange}></input>\r\n                        </td>\r\n                        <td>\r\n                            <select className=\"form-select\" value={this.state.statusFilter} name=\"statusFilter\" onChange={this.onHandleChange}>\r\n                                <option value={-1}>All</option>\r\n                                <option value={0}>Paused</option>\r\n                                <option value={1}>Activated</option>\r\n                            </select>\r\n                        </td>\r\n                        <td></td>\r\n                    </tr>\r\n\r\n                    {elementArray}\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;","import { Component } from \"react\";\r\nimport AddingTaskForm from \"./AddingTaskForm\";\r\nimport Search from \"./Search\";\r\nimport Sort from \"./Sort\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nclass Control extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataSearch: '',\r\n            dataSort: {name:'',key:0},\r\n            taskList: this.props.onSenderTask,\r\n            displayTaskForm: false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onReceiverDisplayTaskForm = (display) => {\r\n        this.setState({\r\n            taskList: this.props.onSenderTask,\r\n            displayTaskForm: display\r\n        });\r\n        this.props.onReceiverDisplayTaskForm(display);\r\n    }\r\n\r\n    onSearchTask = (dataSearch) => {\r\n        this.setState({\r\n            dataSearch: dataSearch\r\n        });\r\n    }\r\n    onSortTask = (name,key) =>{\r\n       this.setState({\r\n           dataSort:{name,key}\r\n\r\n       })\r\n    }\r\n\r\n\r\n    render() {\r\n        localStorage.setItem('task', JSON.stringify(this.props.onSenderTask));\r\n        return (\r\n            <div>\r\n                <div className=\"row mb-3\">\r\n                    <div className=\"col-md-6 mb-3 mt-2\">\r\n                        <AddingTaskForm onSenderDisplayTaskForm={this.props.onSenderDisplayTaskForm} onReceiverDisplayTaskForm={this.onReceiverDisplayTaskForm} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-3\">\r\n                    <div className=\"col-md-6 mb-3\">\r\n                        <Search onSearchTask={this.onSearchTask} />\r\n                    </div>\r\n                    <div className=\"col-md-6 mb-3\">\r\n                        <Sort onSortTask={this.onSortTask}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <TaskList\r\n                        onSenderDataSearch={this.state.dataSearch}\r\n                        onSenderTask={this.props.onSenderTask}\r\n                        onUpdateStatus={this.props.onUpdateStatus}\r\n                        onTaskFormEdit={this.props.onTaskFormEdit}\r\n                        onDeleteTaskItem={this.props.onDeleteTaskItem}\r\n                        onSortTaskItem={this.state.dataSort}\r\n                        />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Control;","import { Component } from \"react\";\r\n\r\nclass HeaderForm extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"pb-3\">\r\n                <h1 style={{textAlign:\"center\"}}>Task Manager</h1>\r\n                <hr/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderForm;","import { Component } from \"react\";\r\n\r\nclass TaskForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id:'',\r\n            nameTask: '',\r\n            statusTask: 1\r\n        };\r\n    }\r\n    onHandleChange = (event) => {\r\n        let target = event.target;\r\n        let infoTask = target.name;\r\n        let value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        this.setState({\r\n            id:this.generateID(),\r\n            [infoTask]: value\r\n        });\r\n        console.log(this.state.statusTask);\r\n\r\n    }\r\n\r\n    onHandleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state.statusTask);\r\n        this.props.onReceiverTask(this.state)\r\n   \r\n    }\r\n    onHandleReset(event){\r\n        this.setState({\r\n            nameTask: '',\r\n            statusTask: 1\r\n        })\r\n        \r\n    }\r\n    \r\n   \r\n    s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + '-' + this.s4();\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"card border border-warning\">\r\n\r\n                <div className=\"card-header bg-warning bg-gradient text-dark\">\r\n                    <h5 className=\"card-title pt-3\">\r\n                        <p className=\"float-start\">Adding task</p>\r\n                        <span className=\"fa fa-times-circle float-end\" />\r\n                    </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <form onSubmit={this.onHandleSubmit} onReset={this.onHandleReset}>\r\n                        <div className=\"form-floating mb-3 \">\r\n                            <input type=\"text\" className=\"form-control\" value={this.state.nameTask} name=\"nameTask\" onChange={this.onHandleChange} />\r\n                            <label>Name:</label>\r\n                        </div>\r\n                        <div className=\"form-floating mb-3 \">\r\n                            <select className=\"form-select\" value={this.state.statusTask} name=\"statusTask\" onChange={this.onHandleChange}>\r\n                                <option value={1}>Activated</option>\r\n                                <option value={0}>Paused</option>\r\n                            </select>\r\n                            <label>Status</label>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-primary m-2\"><span className=\"fa fa-pencil-alt me-2\" /> Save</button>\r\n                            <button type=\"reset\" className=\"btn btn-danger m-2\" ><span className=\"fa fa-times me-2\" /> Cancel</button>\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;","import { Component } from \"react\";\r\n\r\nclass TaskFormEdit extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id:'',\r\n            nameTask:'',\r\n            statusTask:1\r\n        };;\r\n   \r\n        \r\n    }\r\n    onHandleChange = (event) => {\r\n        let target = event.target;\r\n        let infoTask = target.name;\r\n        let value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        this.setState({\r\n            id: this.props.onSenderTaskUpdate.id,\r\n            [infoTask]: value\r\n        });\r\n    }\r\n\r\n    onHandleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onReciverTaskUpdate(this.state)\r\n\r\n    }\r\n    onHandleReset = (event) => {\r\n        this.setState({\r\n            id: this.props.onSenderTaskUpdate.id,\r\n            nameTask: this.props.onSenderTaskUpdate.nameTask,\r\n            statusTask: Number(this.props.onSenderTaskUpdate.statusTask)\r\n        })\r\n    }\r\n\r\n    render() {\r\n  \r\n        return (\r\n            <div className=\"card border border-warning\">\r\n\r\n                <div className=\"card-header bg-warning bg-gradient text-dark\">\r\n                    <h5 className=\"card-title pt-3\">\r\n                        <p className=\"float-start\">Edit task</p>\r\n                        <span className=\"fa fa-times-circle float-end\" />\r\n                    </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <form onSubmit={this.onHandleSubmit} onReset={this.onHandleReset}>\r\n                        <div className=\"form-floating mb-3 \">\r\n                            <input type=\"text\" className=\"form-control\" value={this.state.nameTask} name=\"nameTask\" onChange={this.onHandleChange}  />\r\n                            <label>Name:</label>\r\n                        </div>\r\n                        <div className=\"form-floating mb-3 \">\r\n                            <select className=\"form-select\" value={this.state.statusTask} name=\"statusTask\" onChange={this.onHandleChange}>\r\n                                <option value={1}>Activated</option>\r\n                                <option value={0}>Paused</option>\r\n                            </select>\r\n                            <label>Status</label>\r\n                        </div>\r\n                        <div className=\"text-center \">\r\n                            <button type=\"submit\" className=\"btn btn-primary m-2 text-white\"><span className=\"fa fa-pencil-alt me-2\" /> Save</button>\r\n                            <button type=\"reset\" className=\"btn btn-warning m-2 text-white\" ><span className=\"fa fa-undo-alt me-2\" /> Reset</button>\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskFormEdit;","import { Component } from 'react';\nimport './App.css';\nimport Control from './componants/Control';\nimport HeaderForm from './componants/HeaderForm';\nimport TaskForm from './componants/TaskForm';\nimport TaskFormEdit from './componants/TaskFormEdit';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: [], // id : unique , nameTask , statusTask\n      display: false,\n      taskUpdate: { id: '', nameTask: '', statusTask: 0 }\n    }\n    if (!this.state.taskList.length) {\n      this.onLoadLocalStorage();\n    }\n \n    \n  }\n  onLoadLocalStorage() {\n\n    if (localStorage && localStorage.getItem('task')) {\n      var tasks = JSON.parse(localStorage.getItem('task'));\n      tasks.forEach(element => {\n        this.state.taskList.push(element)\n      });\n    }\n  }\n\n\n  onReceiverTask = (tasks) => {\n    let check = 0;\n    let taskList = this.state.taskList;\n\n    taskList.forEach(e => {\n      if (e.id === tasks.id) {\n        check++;\n      }\n    });\n\n    if (check === 0) {\n      console.log(\"success\");\n      taskList.push(tasks);\n    } else {\n      console.log(check);\n    }\n    this.setState({ taskList: taskList });\n\n  }\n\n  onReceiverDisplayTaskForm = (display) => {\n    this.setState({\n      display: display,\n      taskUpdate: { id: '', nameTask: '', statusTask: 0 }\n    });\n  }\n\n  onUpdateStatus = (id) => {\n    const index = this.findIndex(id);\n    const tempTaskList = this.state.taskList;\n\n    if (index !== -1) {\n      tempTaskList[index].statusTask = Number(tempTaskList[index].statusTask) === 0 ? 1 : 0;\n      this.setState({\n        taskList: tempTaskList\n      })\n    }\n  }\n  findIndex = (id) => {\n    for (let i = 0; i < this.state.taskList.length; i++) {\n      if (this.state.taskList[i].id === id) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  onTaskFormEdit = (id) => {\n    const index = this.findIndex(id);\n    this.setState({\n      display: false,\n      taskUpdate: this.state.taskList[index]\n    })\n\n\n  }\n\n  onReciverTaskUpdate = (task) => {\n    const index = this.findIndex(task.id);\n    let taskListTemp = this.state.taskList;\n    taskListTemp[index] = task;\n    this.setState({\n      taskList: taskListTemp,\n      taskUpdate: { id: '', nameTask: '', statusTask: 0 }\n    })\n  }\n\n  onDeleteTaskItem = (id) => {\n    const index = this.findIndex(id);\n    let taskListTemp = [];\n    for (let i = 0; i < this.state.taskList.length; i++) {\n      if (i !== index) {\n        taskListTemp.push(this.state.taskList[i]);\n      }\n    }\n    this.setState({\n      taskList: taskListTemp,\n      taskUpdate: { id: '', nameTask: '', statusTask: 0 }\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"container pt-2\">\n        <HeaderForm />\n        <div className=\"row\">\n          {/* {this.state.display?\"col-md-4\":\"d-none\"} */}\n          <div className={this.state.display ? \"col-md-4 mt-2\" : \"d-none\"}  >\n\n            <TaskForm onReceiverTask={this.onReceiverTask} />\n          </div>\n\n          <div className={this.state.taskUpdate.id !== '' && !this.state.display ? \"col-md-4 mt-2\" : \"d-none\"}  >\n            <TaskFormEdit\n              onSenderTaskUpdate={this.state.taskUpdate}\n              onReciverTaskUpdate={this.onReciverTaskUpdate} />\n          </div>\n\n          {/* {this.state.display?\"col-md-8\":\"col-md-12\"} */}\n          <div className={this.state.display || this.state.taskUpdate.id !== '' ? \"col-md-8\" : \"col-md-12\"}>\n            <Control\n              onSenderTask={this.state.taskList}\n              onSenderDisplayTaskForm={this.state.display}\n              onReceiverTask={this.onReceiverTask}\n              onReceiverDisplayTaskForm={this.onReceiverDisplayTaskForm}\n              onUpdateStatus={this.onUpdateStatus}\n              onTaskFormEdit={this.onTaskFormEdit}\n              onDeleteTaskItem={this.onDeleteTaskItem} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}